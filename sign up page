import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:intl_phone_field/intl_phone_field.dart';
import 'package:intl_phone_field/phone_number.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});
  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  bool isobscured = true;
  final _formkey = GlobalKey<FormState>();
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        backgroundColor: Colors.white,
        body: SafeArea(
          child: SingleChildScrollView(
            padding: const EdgeInsets.all(24.0),
            child: Form(
              key: _formkey,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Center(
                    child: CircleAvatar(
                      radius: 30,
                      backgroundColor: Colors.blue.shade100,
                      child: Icon(
                        Icons.graphic_eq,
                        color: Colors.blue,
                        size: 30.0,
                      ),
                    ),
                  ),
                  const SizedBox(height: 20.0),
                  //title
                  Text(
                    "Start your journey from here",
                    style: TextStyle(
                      color: Colors.black,
                      fontSize: 29.0,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  const SizedBox(height: 5.0),
                  Text(
                    "Sign up for free!",
                    style: TextStyle(color: Colors.black, fontSize: 12.0),
                  ),
                  const SizedBox(height: 30),
                  //email field
                  TextFormField(
                    validator: (email) {
                      if (email == null || email.isEmpty) {
                        return 'Please enter your email';
                      } else if (!RegExp(
                        r'^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})$',
                      ).hasMatch(email)) {
                        return 'Enter a valid email';
                      }
                      return null;
                    },
                    decoration: InputDecoration(
                      labelText: "Email",
                      prefixIcon: Icon(Icons.email_outlined),
                      hintText: 'nevaeh.simmons@example.com',
                      hintStyle: TextStyle(color: Colors.black),
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                  ),
                  const SizedBox(height: 20),
                  IntlPhoneField(
                    validator: (phone) {
                      if (phone == null)  {
                        return 'Please enter your phone number';
                      }
                      return null;
                    },
                    invalidNumberMessage: 'Please enter a valid phone number',
                    style: TextStyle(fontSize: 10.0),
                    keyboardType: TextInputType.phone,
                    onChanged: (phone) {
                      print(phone.completeNumber);
                    },
                    decoration: InputDecoration(
                      labelText: "Phone number",
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                  ),

                  const SizedBox(height: 20),
                  //password field
                  TextFormField(
                    validator: (password) {
                      if (password == null || password.isEmpty) {
                        return 'Enter your password';
                      } else if (password.length > 12) {
                        return 'Your password should be at most 12 characters';
                      } else if (RegExp(
                        r'^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#$&!*%]).{1,12}$',
                      ).hasMatch(password)) {
                        return null;
                      } else {
                        return 'Password must contain uppercase, lowercase , number & symbol';
                      }
                    },
                    keyboardType: TextInputType.visiblePassword,
                    obscureText: isobscured,
                    decoration: InputDecoration(
                      labelText: "Password",
                      prefixIcon: Icon(Icons.lock_outlined),
                      hintText: '........',

                      hintStyle: TextStyle(color: Colors.black),
                      suffixIcon: GestureDetector(
                        onTap: () {
                          setState(() {
                            isobscured = !isobscured;
                          });
                        },
                        child: isobscured
                            ? Icon(Icons.visibility)
                            : Icon(Icons.visibility_off_outlined),
                      ),
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                  ),
                  const SizedBox(height: 20),
                  SizedBox(
                    width: double.infinity,
                    child: ElevatedButton(
                      onPressed: () {
                        if (_formkey.currentState!.validate()) {
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              content: Text('Form is valid'),
                              backgroundColor: Colors.green,
                            ),
                          );
                        } else {
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              content: Text(
                                'Form is invalid. Please check your input',
                              ),
                              backgroundColor: Colors.red,
                            ),
                          );
                        }
                      },
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.blue,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                        padding: const EdgeInsets.symmetric(vertical: 15),
                      ),
                      child: Text(
                        "Sign Up",
                        style: TextStyle(fontSize: 16, color: Colors.white),
                      ),
                    ),
                  ),
                  const SizedBox(height: 20),
                  // login link
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text("Already have an account?"),
                      TextButton(onPressed: () {}, child: Text("Log in")),
                    ],
                  ),
                  const SizedBox(height: 20.0),
                  //divider lone with or
                  Row(
                    children: [
                      Expanded(child: Divider(thickness: 1)),
                      Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 8.0),
                        child: Text("OR"),
                      ),
                      Expanded(child: Divider(thickness: 1)),
                    ],
                  ),
                  const SizedBox(height: 20),
                  //social buttons
                  _buildSocialButton(
                    FontAwesomeIcons.apple,
                    "Continue with Apple",
                  ),
                  const SizedBox(height: 10),
                  _buildSocialButton(
                    FontAwesomeIcons.google,
                    "Continue with Google",
                  ),
                  const SizedBox(height: 10),
                  _buildSocialButton(
                    FontAwesomeIcons.facebook,
                    "Continue with Facebook",
                  ),
                  const SizedBox(height: 10),
                  _buildSocialButton(
                    FontAwesomeIcons.twitter,
                    "Continue with Twitter",
                  ),
                  const SizedBox(height: 10),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildSocialButton(IconData icon, String text) {
    return OutlinedButton.icon(
      onPressed: () {},
      icon: Icon(icon, size: 24),
      label: Text(text),
      style: OutlinedButton.styleFrom(
        minimumSize: Size(double.infinity, 50),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      ),
    );
  }
}
